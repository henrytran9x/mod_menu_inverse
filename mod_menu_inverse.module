<?php

/**
 * Implements hook_form_alter().
 */
function mod_menu_inverse_form_alter(&$form, &$form_state, $form_id)
{
    if($form_id == 'menu_edit_menu')
    {
        $options = array('none'=> '--- None ---','menu-inverse' => 'Menu inverse');
        $form['menu_inverse'] = array(
            '#type' => 'select',
            '#title' => t('Format Style Menu'),
            '#options' => $options,
            '#weight' => 0,
            '#default_value' =>  variable_get($form['menu_name']['#default_value'].'-mod-menu')

        );
        $form['#submit'][] = 'mod_menu_inverse_form_submit';
    }
}

function mod_menu_inverse_form_submit(&$form,&$form_state)
{
    $values = $form_state['values'];
    variable_set($values['menu_name'].'-mod-menu',$values['menu_inverse']);
    
}


function mod_menu_inverse_preprocess_block(&$variables)
{
    $block = $variables['block'];
    if($block->module == 'menu')
    {
        $mod_menu = variable_get($block->delta.'-mod-menu');
         if($mod_menu == 'menu-inverse')
         $variables['classes_array'][] = 'inverse';
    }
}


/**
 * Implements hook_block_view_alter().
 */
function mod_menu_inverse_block_view_alter(&$data, $block)
{
   
    if($block->module == 'menu')
    {
         $mod_menu = variable_get($block->delta.'-mod-menu');
         if($mod_menu == 'menu-inverse')
        drupal_add_js(drupal_get_path('module','mod_menu_inverse').'/js/mod_menu_inverse.js');

    }
}
